var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as Utils from '@datocms/rest-client-utils';
import BaseResource from '../../BaseResource';
var EmojiSuggestions = /** @class */ (function (_super) {
    __extends(EmojiSuggestions, _super);
    function EmojiSuggestions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Retrieve emoji suggestions
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/emoji-suggestions/self
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     *
     * @deprecated This API call is to be considered private and might change without notice
     */
    EmojiSuggestions.prototype.find = function (queryParams) {
        return this.rawFind(queryParams).then(function (body) {
            return Utils.deserializeResponseBody(body);
        });
    };
    /**
     * Retrieve emoji suggestions
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/emoji-suggestions/self
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     *
     * @deprecated This API call is to be considered private and might change without notice
     */
    EmojiSuggestions.prototype.rawFind = function (queryParams) {
        return this.client.request({
            method: 'GET',
            url: '/emoji-suggestions',
            queryParams: queryParams,
        });
    };
    EmojiSuggestions.TYPE = 'emoji_suggestions';
    return EmojiSuggestions;
}(BaseResource));
export default EmojiSuggestions;
//# sourceMappingURL=EmojiSuggestions.js.map